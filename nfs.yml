---
- name: Base configuration
  hosts: all
  become: true
  tasks:
  - name: Time Zone
    timezone:
      name: CET
  - name: ntp installed
    package:
      name: ntp
  - name: ntp enabled
    when: not ansible_distribution == "Debian"
    service:
      name: ntpd
      enabled: true
      state: started
  - name: Names in /etc/hosts
    blockinfile:
      path: /etc/hosts
      block: |
        192.168.50.10 nfs
        192.168.50.11 nfs1
        192.168.50.12 nfs2
        192.168.50.20 iscsi
        192.168.50.100 client

# https://www.tecmint.com/setup-iscsi-target-and-initiator-on-debian-9/
- name: iSCSI Target
  hosts: iscsi
  become: true
  tasks:
  - name: iSCSI software
    package:
      name: tgt
  - name: iSCSI configuration
    copy:
      src: data_iscsi.conf
      dest: /etc/tgt/conf.d/
    register: config
  - name: Reload iSCSI service
    when: config.changed
    service:
      name: tgt
      state: restarted

- name: iSCSI Initiators
  hosts:
  - nfs1
  - nfs2
  become: true
  tasks:
  - name: iSCSI software
    package:
      name: open-iscsi
  - name: Check if already detected
    stat:
      path: '/etc/iscsi/nodes/iqn.2018-08.es.raulpedroche:lun1/192.168.50.20,3260,1/default'
    register: default
  - name: Discovery
    when: not default.stat.exists
    command: iscsiadm -m discovery -t st -p 192.168.50.20
  - name: Authentication
    blockinfile:
      create: no
      path: '/etc/iscsi/nodes/iqn.2018-08.es.raulpedroche:lun1/192.168.50.20,3260,1/default'
      block: |
        node.session.auth.method = CHAP
        node.session.auth.username = nfs-iscsi-user
        node.session.auth.password = secret0
        node.session.auth.username_in = debian-iscsi-target
        node.session.auth.password_in = s3cr3to
    register: auth
  - name: Autostart
    lineinfile:
      create: no
      path: '/etc/iscsi/nodes/iqn.2018-08.es.raulpedroche:lun1/192.168.50.20,3260,1/default'
      regexp: '^node\.startup'
      line: 'node.startup = automatic'
  - name: Restart iSCSI initiator
    when: auth.changed
    service:
      name: open-iscsi
      state: restarted

# http://realtechtalk.com/configuring_ocfs2_clustered_file_system_on_debian_based_linux_including_ubuntu_and_kubuntu-109-articles
- name: OCFS cluster
  hosts:
  - nfs1
  - nfs2
  become: true
  tasks:
  - name: OCFS2 software
    apt:
      name: ocfs2-tools
  - name: Enable O2CB
    lineinfile:
      create: no
      path: /etc/default/o2cb
      regexp: '^O2CB_ENABLED'
      line: 'O2CB_ENABLED=true'
  - name: OCFS2 configuration directory
    file:
      state: directory
      path: /etc/ocfs2
  - name: OCFS2 cluster.conf
    copy:
      src: cluster.conf
      dest: /etc/ocfs2/
    register: cluster_conf
  - name: Restart OCFS2 service
    when: cluster_conf.changed
    service:
      name: o2cb
      state: restarted

- name: Create OCFS2 file systems
  hosts: nfs1
  become: true
  tasks:
  - name: Check if already partitioned
    stat:
      path: /dev/sdb1
    register: sdb1
  - name: Partition disk
    when: not sdb1.stat.exists
    script: partition.sh
  - name: Check if /root/.nfs_created exists
    stat:
      path: /root/.nfs_created
    register: nfs_created
  - name: Check if /var/lib/nfs/lost+found exists
    stat:
      path: /var/lib/nfs/lost+found
    register: nfs_lost_found
  - name: Create /var/lib/nfs filesystem
    when: not nfs_created.stat.exists and not nfs_lost_found.stat.exists
    # Default options seem to be fine for 64 MB fs
    command: 'mkfs.ocfs2 -L NFS -N 2 /dev/sdb1'
  - name: /root/.nfs_created present
    lineinfile:
      create: yes
      path: /root/.nfs_created
      line: "The file system has been created"
  - name: Check if /root/.data_created exists
    stat:
      path: /root/.data_created
    register: data_created
  - name: Check if /srv/nfs4/data/lost+found exists
    stat:
      path: /srv/nfs4/data/lost+found
    register: data_lost_found
  - name: Create data file system
    when: not data_created.stat.exists and not data_lost_found.stat.exists
    command: 'mkfs.ocfs2 -b 4k -C 32K -L Data -N 2 /dev/sdb2'
  - name: /root/.data_created present
    lineinfile:
      create: yes
      path: /root/.data_created
      line: "The file system has been created"

- name: Mount OCFS2 file systems
  hosts:
  - nfs1
  - nfs2
  become: true
  tasks:
  - name: Check if /dev/sdb1 exists
    stat:
      path: /dev/sdb1
    register: sdb1
  - name: Reload partition table
    when: not sdb1.stat.exists
    command: /usr/bin/partx -u /dev/sdb
  - name: NFS state mount point
    file:
      path: /var/lib/nfs
      state: directory
  - name: Mount NFS state file system
    mount:
      fstype: ocfs2
      path: /var/lib/nfs
      src: /dev/sdb1
      state: mounted
  - name: Data mount point
    file:
      path: /srv/nfs4/data
      state: directory
  - name: Mount data file system
    mount:
      fstype: ocfs2
      path: /srv/nfs4/data
      src: /dev/sdb2
      state: mounted
  - name: Data file system permissions
    file:
      path: /srv/nfs4/data
      state: directory
      owner: vagrant
      group: vagrant

- name: NFSv4 export
  hosts:
  - nfs1
  - nfs2
  # We cannot install nfs-server concurrently as installation
  # tries to write to shared /var/lib/nfs file system
  serial: 1
  become: true
  tasks:
  - name: NFS software
    apt:
      name: nfs-kernel-server
    register: install_nfs_server
  - name: Stop and disable autostart of NFS server
    when: install_nfs_server.changed
    service:
      name: nfs-server
      enabled: false
      state: stopped
  - name: idmapd enabled
    lineinfile:
      path: /etc/default/nfs-common
      regexp: '^NEED_IDMAPD'
      line: 'NEED_IDMAPD=true'
  - name: /etc/exports
    copy:
     src: exports
     dest: /etc/exports

- name: Keepalived
  hosts:
  - nfs1
  - nfs2
  become: true
  tasks:
  - name: Keepalived software
    apt:
      name: keepalived
  - name: keepalived.conf
    copy:
      src: keepalived.conf
      dest: /etc/keepalived/
    register: keepalived_conf
  - name: Restart keepalived
    when: keepalived_conf.changed
    service:
      name: keepalived
      state: restarted

- name: NFS Client
  hosts: client
  become: true
  tasks:
  - name: NFS client software
    yum:
      name: nfs-utils
  - name: Mount point
    file:
      path: /data
      state: directory
  - name: Mount file system
    mount:
      path: /data
      src: 'nfs:data'
      fstype: nfs
      opts: vers=4.2,soft
      state: mounted
